/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ngoinhacafe.GUI.Page.Popup;

import com.github.lgooddatepicker.components.DatePicker;
import com.github.lgooddatepicker.components.DatePickerSettings;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import ngoinhacafe.GUI.Page.Interface.ActionPerform;

/**
 *
 * @author Admin
 */
public class ThemSuaKhuyenMaiPopup extends javax.swing.JFrame implements ActionListener, ActionPerform {

    /**
     * Creates new form ThemSuaKhuyenMaiPopup
     */
    public ThemSuaKhuyenMaiPopup(String loai, String makm) {
        initComponents();
        this.setLocationRelativeTo(null);
        setResizable(false);
        WindowActions.WindowClosing(this);
        updateInit();
        addActionPerform();
        
        if (loai.equalsIgnoreCase("thêm")) {
            setTitle("Thêm khuyến mãi");
            themSuaBtn.setText("Thêm");
        } else {
            setTitle("Sửa khuyến mãi");
            themSuaBtn.setText("Sửa");
            
            txtMaKM.setText(makm);
            txtMaKM.setEditable(false);
        }
    }
    
    private void updateInit() {
        setVisible(true);
        
        DatePickerSettings dpSetting1 = new DatePickerSettings();
        dpSetting1.setVisibleDateTextField(false);
        dpNgayBatDau.setSettings(dpSetting1);
        
        DatePickerSettings dpSetting2 = new DatePickerSettings();
        dpSetting2.setVisibleDateTextField(false);
        dpNgayKetThuc.setSettings(dpSetting2);

        txtNgayBatDau.setEditable(false);
        txtNgayKetThuc.setEditable(false);
    }
    
    @Override
    public void addActionPerform() {
        // Add action listener
        themSuaBtn.addActionListener(this);
        thoatBtn.addActionListener(this);
        
        dpNgayBatDau.addDateChangeListener((dce) -> {
            txtNgayBatDau.setText(dpNgayBatDau.getDateStringOrEmptyString());
        });
        dpNgayKetThuc.addDateChangeListener((dce) -> {
            txtNgayKetThuc.setText(dpNgayKetThuc.getDateStringOrEmptyString());
        });
    }
    
    private void kiemTraDieuKien(String loai) {
        boolean check = true;
        
        if (txtMaKM.getText().length() == 0 && check) {
            check = false;
            
            ThongBao.hienLoi("Mã khuyến mãi không được để trống!");
            txtMaKM.requestFocus();
        }
        
        if (txtTenKM.getText().length() == 0 && check) {
            check = false;
            
            ThongBao.hienLoi("Tên khuyến mãi không được để trống!");
            txtTenKM.requestFocus();
        }
        
        if (!Regex.ktraTen(txtMaKM.getText()) && check) {
            check = false;
            
            ThongBao.hienLoi("Mã khuyến mãi không hợp lệ!");
            txtMaKM.requestFocus();
        }
        
        if (!Regex.ktraTen(txtTenKM.getText()) && check) {
            check = false;
            
            ThongBao.hienLoi("Mã khuyến mãi không hợp lệ!");
            txtTenKM.requestFocus();
        }
        
        if (txtDKKM.getText().length() == 0 && check) {
            check = false;
            
            ThongBao.hienLoi("Điều kiện khuyến mãi không được để trống!");
            txtDKKM.requestFocus();
        }
        
        if (txtPTrKM.getText().length() == 0 && check) {
            check = false;
            
            ThongBao.hienLoi("Phần trăm khuyến mãi không được để trống!");
            txtPTrKM.requestFocus();
        }
        
        if (txtNgayBatDau.getText().length() == 0 && check) {
            check = false;
            
            ThongBao.hienLoi("Ngày bắt đầu không được để trống!");
            txtNgayBatDau.requestFocus();
        }
        
        if (txtNgayKetThuc.getText().length() == 0 && check) {
            check = false;
            
            ThongBao.hienLoi("Ngày kết thúc không được để trống!");
            txtNgayKetThuc.requestFocus();
        }
            
        if (check) {
            if (loai.equalsIgnoreCase("thêm")) {
                themData();
                
            } else {
                capNhatData();
            }
        }
    }
    
    private void themData() {
        
    }
    
    private void capNhatData() {
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtMaKM = new javax.swing.JTextField();
        txtTenKM = new javax.swing.JTextField();
        txtDKKM = new javax.swing.JTextField();
        txtPTrKM = new javax.swing.JTextField();
        themSuaBtn = new javax.swing.JButton();
        thoatBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        dpNgayBatDau = new com.github.lgooddatepicker.components.DatePicker();
        txtNgayBatDau = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        dpNgayKetThuc = new com.github.lgooddatepicker.components.DatePicker();
        txtNgayKetThuc = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtMaKM.setBorder(javax.swing.BorderFactory.createTitledBorder("Mã khuyến mãi"));

        txtTenKM.setBorder(javax.swing.BorderFactory.createTitledBorder("Tên khuyến mãi"));

        txtDKKM.setBorder(javax.swing.BorderFactory.createTitledBorder("Điều kiện khuyến mãi"));

        txtPTrKM.setBorder(javax.swing.BorderFactory.createTitledBorder("Phần trăm khuyến mãi"));

        themSuaBtn.setText("Thêm/Sửa");

        thoatBtn.setText("Thoát");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Ngày bắt đầu"));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtNgayBatDau, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dpNgayBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dpNgayBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNgayBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Ngày kết thúc"));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtNgayKetThuc, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dpNgayKetThuc, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dpNgayKetThuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNgayKetThuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(96, 96, 96))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(themSuaBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(thoatBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDKKM, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaKM, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTenKM, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                            .addComponent(txtPTrKM))))
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTenKM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaKM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDKKM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPTrKM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(themSuaBtn)
                    .addComponent(thoatBtn))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.github.lgooddatepicker.components.DatePicker dpNgayBatDau;
    private com.github.lgooddatepicker.components.DatePicker dpNgayKetThuc;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton themSuaBtn;
    private javax.swing.JButton thoatBtn;
    private javax.swing.JTextField txtDKKM;
    private javax.swing.JTextField txtMaKM;
    private javax.swing.JTextField txtNgayBatDau;
    private javax.swing.JTextField txtNgayKetThuc;
    private javax.swing.JTextField txtPTrKM;
    private javax.swing.JTextField txtTenKM;
    // End of variables declaration//GEN-END:variables
    
    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == themSuaBtn) {
            kiemTraDieuKien(themSuaBtn.getText());
        }
        if (e.getSource() == thoatBtn) {
            this.dispose();
        }
    }
}
